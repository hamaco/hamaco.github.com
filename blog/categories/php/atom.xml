<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: php | hamaco's blog]]></title>
  <link href="http://hamaco.github.com/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://hamaco.github.com/"/>
  <updated>2015-04-19T23:12:47+09:00</updated>
  <id>http://hamaco.github.com/</id>
  <author>
    <name><![CDATA[hamaco]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[「Laravelエキスパート養成読本」を読んだ]]></title>
    <link href="http://hamaco.github.com/blog/2015/04/19/laravel-expert-book-review/"/>
    <updated>2015-04-19T23:02:00+09:00</updated>
    <id>http://hamaco.github.com/blog/2015/04/19/laravel-expert-book-review</id>
    <content type="html"><![CDATA[<p><img src="/images/2015/04/laravel-expert-book-review-01.jpg" width="320"></p>

<p>Laravelエキスパート養成読本を <a href="https://twitter.com/localdisk">@localdisk</a> さんから頂いたので読んでみました。</p>

<h2>はじめに</h2>

<p>Laravel は一応気にはなっていたけど、まともに触ったことがなくて DB から SELECT する程度のやつで軽く触ってみたくらいしかないです。
あとは、魔法少女ネタとか、CakePHP を使ってた人達がこぞって Laravel 使いだしてたりしてるなーってのを眺めてた感じ。</p>

<p>なので、主に Chapter2 と Chapter5 に期待して読みました。</p>

<h2>Chapter 1</h2>

<p>Laravel の歴史とか、情報サイトの話とか、ネットでよくある Hello World 的なサンプルが載っていて、流石にここで知らないコードでてこないだろうとか思いつつ読んでたけど、途中から名前付きルートとかの説明があってもうこの時点でまったく知らないコードが……</p>

<p>私が読んでる時点では公開されてなかったので普通にコマンドを叩いて Laravel 入れたけど、発売後には簡単に Laravel を試せる環境が公開されてるはずなので、環境自分で作らなくても Laravel 試せるのは良さそう。</p>

<h2>Chapter 2</h2>

<p>基礎の Chapter 2 の時点でサンプルアプリのコードを凄く細かく説明していて、もうここを読んだだけでも結構お腹一杯。
DB の使い方とかも最初にちゃんとした書き方の説明をして、そこからもっと簡単な書き方になってたり、View もベタベタに1ファイルにずらーっと書くだけじゃなくしっかりパーツ毎に分割してたりで、とりあえず簡単なアプリケーションならもう Laravel っぽく書けるんじゃないかって気分になります。
特にバリデーションエラーとか、ページ毎に <code>&lt;title&gt;</code> とかそういうレイアウト部分を変える方法とかの地味に気になる部分も書かれてるのは良かった。</p>

<p>サンプルアプリのデモが公開されているので、自分でサンプルアプリを動かす環境を作らなくてもソースコードを読みつつ動きを見れるのですが、私が見た時は誰かのイタズラで動かなくなってたので残念……</p>

<h2>Chapter 3</h2>

<p>IoCコンテナとか、ファサードといった、Laravel と言えばー? な機能の解説がコアのコード込みで簡潔に説明されていて分かりやすかった。</p>

<p>Eloquent は普通のクエリ実行から、リレーションやクエリスコープとか多分一通り説明されているので、とりあえず DB の使い方知りたくなったらここを見てみると良さげ。
ただ、私はまだ Eloquent すらあまり使いこなしてないので、まずは Eloquent の使い方を覚えて、ある程度 Laravel に慣れてきたら残りを再度読み直して見ようかなーと思います。</p>

<h2>Chapter 4</h2>

<p>リリースされたばかりの Laravel 5 新機能紹介!
コマンドバス&amp;ジョブキュー、フォームリクエスト、タスクランナーとか色々気になる機能が Laravel 5 から増えているらしいけど、Laravel 初心者の私にはちょっと難しいのでこの章も後でもう1回読まないとなー。</p>

<h2>Special</h2>

<p>Symfony / CakePHP / Zend Framework / Yii フレームワークの最新事情と PSR がさっくり紹介されてるのでとりあえず読んでおいて損はない感じ。</p>

<h2>Chapter 5</h2>

<p>簡単な REST API アプリケーションの作り方が分かりやすく綺麗に書かれているので、Chapter 2 と合わせてこれを読めば Laravel 始めるスタートダッシュが決めれる感じ。
ここまで読むと、他の章と合わせてルーティングの機能が色々説明されているので、どのフレームワークでも意外と機能があるけど使いこなせる気がしないルーティングに詳しくなってる気がするのも良かった。</p>

<h2>さいごに</h2>

<p>Laravel 初心者でも楽しく読めるところからスタートしつつ、Laravel らしい機能もちゃんと紹介されてて良かった。
PHP 初心者がここからスタートするのは難しいだろうけど、他のフレームワーク使ったことある人とかある程度 PHP が書ける人はこの本から Laravel 入門するのも良いんじゃないかと思います。</p>

<p>これから Chapter5 のサンプルコード読んで、Chapter2 と合わせて参考にしつつ、とりあえず Laravel 使ってます状態のコードをちゃんと Laravel っぽい書き方で書き直していきたい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CandyCane API実装中]]></title>
    <link href="http://hamaco.github.com/blog/2012/12/09/cakephp-adventcalendar-2012/"/>
    <updated>2012-12-09T19:02:00+09:00</updated>
    <id>http://hamaco.github.com/blog/2012/12/09/cakephp-adventcalendar-2012</id>
    <content type="html"><![CDATA[<p>このエントリは、<a href="http://www.adventar.org/calendars/40">CakePHP Advent Calendar 2012</a>の9日目です。8日目は<a href="https://twitter.com/junichi_11">@junichi_11</a>さんの「<a href="http://junichi11.com/?p=2665">NetBeans plugin の改善点</a>」でした。</p>

<h2>はじめに</h2>

<p>普段仕事でCakePHPをメインに使ってるとかそういったことがまったくなく、私がCakePHPをネタにする時は大体CandyCaneネタなので、今回もCandyCaneネタでいきたいと思います。</p>

<h2>REST API</h2>

<p>RedmineにはREST APIというものがあって、XMLやJSON形式でチケットの一覧が見れたり、チケットの登録などの作業がRedmineのWebページを使わずにできるようになっています。
ここで紹介するだけあって、もちろんCandyCaneには実装されてません(でした)。</p>

<p>そんな訳で一部APIをさっき実装してみました。
今回は <a href="https://github.com/yuroyoro/git-issue">git-issue</a> というRedmineのチケットを表示・編集できるツールが使えるようにしたいというのを目標に実装してみたので、それの動作をRedmineとCandyCaneで比較しつつ紹介していきたいと思います。</p>

<h2>API keyの作成</h2>

<p>API keyの作成部分はCandyCane側は今の所APIをOFFにできないくらいで基本的な作成方法は同じになっています。
個人設定ページの右サイドバーにAPI keyの表示・作成がある感じですね。</p>

<h3>Redmine</h3>

<p><img src="/images/2012/12/cakephp-adventcalendar-2012-01.png"></p>

<h3>CandyCane</h3>

<p><img src="/images/2012/12/cakephp-adventcalendar-2012-02.png"></p>

<h2>git-issueの設定</h2>

<p>一応git-issueの初期設定も簡単に書いておきます。
git-issueを使いたいプロジェクトの中で以下のようにコマンドを打つとgit issueサブコマンドで色々できるようになります。
type以外の部分は自分のCandyCane/Redmineのに合わせて変えて下さい。</p>

<p><code>
% git config issue.type redmine
% git config issue.url http://candycane.hamacbook.local/
% git config issue.apikey e9897fd4de9570b5d61744d8ab1e18b796615e5b
% git config issue.repo candycane
% git config issue.user hamaco
</code></p>

<h2>チケットの一覧表示</h2>

<p>CandyCane/Redmineに登録されているチケットの一覧が表示できます。</p>

<h3>Redmine</h3>

<p><img src="/images/2012/12/cakephp-adventcalendar-2012-03.png" width="680"></p>

<h3>CandyCane</h3>

<p><img src="/images/2012/12/cakephp-adventcalendar-2012-04.png" width="680"></p>

<h2>チケットの詳細表示</h2>

<p>CandyCane/Redmineに登録されているチケットの詳細が表示できます。</p>

<h3>Redmine</h3>

<p><img src="/images/2012/12/cakephp-adventcalendar-2012-05.png" width="680"></p>

<h3>CandyCane</h3>

<p><img src="/images/2012/12/cakephp-adventcalendar-2012-06.png" width="680"></p>

<h2>チケットの登録</h2>

<p>ここが一番やりたかったのですが、時間がなくなってしまったのと、git-issueがチケット登録時にJSONでデータを渡していて、CakePHPで上手いやり方が分からなかったので実装できてません……</p>

<h2>最後に</h2>

<p>まだまだ全然できてないですが、一応多少作ったので紹介してみました。まだ本家にpull requestを投げてないので、今は<a href="https://github.com/hamaco/candycane/tree/api-access">ここのブランチ</a>をチェックアウトしてくると試す事ができます。</p>

<p>明日は<a href="https://twitter.com/yandod">@yandod</a>さんです。よろしくお願いしますー。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP Matsuri 2012に参加してきた]]></title>
    <link href="http://hamaco.github.com/blog/2012/11/14/phpmatsuri-2012/"/>
    <updated>2012-11-14T23:04:00+09:00</updated>
    <id>http://hamaco.github.com/blog/2012/11/14/phpmatsuri-2012</id>
    <content type="html"><![CDATA[<p>11/3 &ndash; 11/4に福岡で開催されたPHP Matsuri 2012に参加してきました。
東京のMatsuriには行ったことがないのでPHP Matsuriの参加は前回の関西に続いて2回目の参加です。</p>

<p>前回PHP Matsuriってのがどんなのか良く分からずなんの準備もなく参加したけど、今回は前回の教訓を生かして事前にLTネタを考えてから参加しま……せんでした。
PHP Matsuriの前のPHP勉強会でネタ決めましたー? 決めてないですーとか会話しつつ何か考えないといかんなー何にしようかなーとか思ってたらいつの間にか当日になってたとかいう状態で去年の反省どこいったのやら。</p>

<h2>前日</h2>

<p>そんなわけで唯一の去年の教訓を生かして事前に金曜と月曜の有給を取得しておいたので夕方頃に福岡に到着。
しかし、この時点で昼を福岡で食べれるように飛行機とっておけば、一食福岡で食事する機会が増えたのにとちょい後悔。</p>

<p>福岡に着いた時点でXperiaのバッテリーがヤバかったのでホテルで充電してたら、アシアルの変な人がMonacaのセミナーやってるとか言ってたので懇親会目当てに参加したら懇親会にグラハム &amp; ホセが現れたり、3次会まで行ったりとかでホテルに戻ってきたのが朝の4時近くとかいうMatsuriの前日とは思えない時間になってました。
セミナー会場入った時に見えた人に嫌な予感がしたんだよなぁ……</p>

<h2>初日</h2>

<p>昼から夜の間の記憶がうどんが美味しかったくらいしか残ってないのですが、多分デプロ～イとかあったようななかったような。</p>

<p>夜中1時前くらいから部屋の前の方でファミコンをピコピコやってる音が聞こえてくる中、candycane-repository-browserをある程度形に持っていったり、一緒にファミコンやったりしてました。
ファミコンがあるかもと噂を聞いていたので家にあったなんか良くわからないスーパーマリオブラザーズを持って行ったりしたのですが、マリオをプレイしてそうな時間帯に丁度BEAR.Sundayのワークショップ参加してたので実際プレイしたのかどうかは分からず……</p>

<p>ファミコンやった後丁度LTの申し込み受付開始してたので申し込みして眠たかったので椅子4つ程並べて3時間程寝て初日はおしまい。</p>

<h2>二日目</h2>

<p>朝起きてちょっとポチポチ弄ってたらgithubのAPI制限に引っかかってしまい何も表示されない状態になったりしつつ細かい所修正したり、もうどうでも良い気分になって諦めたりしてたらいつの間にか時間切れ。</p>

<p>どうせ発表時間3分ないだろうと高をくくってまったく資料とか用意してなかったのに、4分+準備に1分とか凄い長い時間あったので仕方なくshowtime.vimで簡単なスライド作って自作のネタプラグインとかインストールしてLT準備しました。</p>

<p>発表自体は後5秒くらいって所で終わってしまい微妙に残念でしたが、意外とポイントが高かったみたいでスタバのカード(3000円)貰っちゃいました。</p>

<h2>完成物</h2>

<p>LTで発表したcandycane-repository-browserがいきあたりばったりすぎてCakePHPのPluginとしてちゃんと動いてなかったのを直してから書こうと思ってたらこんなに遅くなってしまいました。</p>

<p>まあまだまだ色々ちゃんと動いてなかったりするので実際に使えるようになるのはもうちょい先だと思うけど、一応Plugin化できたので公開しちゃおうかと。
ちゃんと作ってからだとなんかあんまりPHPMatsuriで頑張った感がなくなっちゃうし。</p>

<p>そんなわけで<a href="https://github.com/hamaco/candycane-repository-browser">ここ</a>で公開してます。</p>

<p>ただ、CandyCane本体を弄ってるのでこの後pull request投げて、取り込まれるまで動かないです。取り込まれ次第candycane-pluginsのリポジトリにpull request投げる予定なのでしばらくしたらプラグインマネージャからインストールできるようになると思います。</p>

<p>既にいくつかIssues書いたりしてるのでボチボチ作業していこうかなぁといった所。</p>

<h2>おまけ</h2>

<p>ついでなので福岡で食べたものの写真でも載せときます。</p>

<p><img src="/images/2012/11/phpmatsuri-2012-01.png" width="320"></p>

<p><img src="/images/2012/11/phpmatsuri-2012-02.png" width="320"></p>

<p><img src="/images/2012/11/phpmatsuri-2012-03.png" width="240"></p>

<p><img src="/images/2012/11/phpmatsuri-2012-04.png" width="240"></p>

<p><img src="/images/2012/11/phpmatsuri-2012-05.png" width="240"></p>
]]></content>
  </entry>
  
</feed>
