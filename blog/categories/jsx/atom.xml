<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jsx | hamaco's blog]]></title>
  <link href="http://hamaco.github.com/blog/categories/jsx/atom.xml" rel="self"/>
  <link href="http://hamaco.github.com/"/>
  <updated>2013-11-27T21:46:46+09:00</updated>
  <id>http://hamaco.github.com/</id>
  <author>
    <name><![CDATA[hamaco]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JSXをインストールしてちょろっと触ってみた]]></title>
    <link href="http://hamaco.github.com/blog/2012/05/31/install-jsx/"/>
    <updated>2012-05-31T10:23:00+09:00</updated>
    <id>http://hamaco.github.com/blog/2012/05/31/install-jsx</id>
    <content type="html"><![CDATA[<p><strong>jsx.vimがあったので多少変更</strong></p>

<p>今朝Twitterのタイムラインで<a href="http://jsx.github.com/">JSX</a>なるものが話題になっていたのでちょろっとインストールしてみた。</p>

<h2>インストール</h2>

<p>JSXにはnode.js / npmが必要なのでインストールする。今回はお試しで入れたのでaptitudeからインストールする。
<code>
$ s aptitude install npm
</code></p>

<p>まずはJSX本体がないと話にならないのでgitからcloneしてくる。
<code>
$ git clone https://github.com/jsx/JSX.git
$ cd JSX
</code></p>

<p>READMEに従ってインストールする。
<code>
$ make setup
</code></p>

<p>以下のようなのがずらずらでてくるので暫く待つ。
```
npm install
npm http GET <a href="https://registry.npmjs.org/browserbuild">https://registry.npmjs.org/browserbuild</a>
npm http GET <a href="https://registry.npmjs.org/source-map">https://registry.npmjs.org/source-map</a>
npm http 200 <a href="https://registry.npmjs.org/source-map">https://registry.npmjs.org/source-map</a>
npm http GET <a href="https://registry.npmjs.org/source-map/-/source-map-0.1.0.tgz">https://registry.npmjs.org/source-map/-/source-map-0.1.0.tgz</a>
npm http 200 <a href="https://registry.npmjs.org/browserbuild">https://registry.npmjs.org/browserbuild</a>
npm http GET <a href="https://registry.npmjs.org/browserbuild/-/browserbuild-0.4.9.tgz">https://registry.npmjs.org/browserbuild/-/browserbuild-0.4.9.tgz</a>
npm http 200 <a href="https://registry.npmjs.org/source-map/-/source-map-0.1.0.tgz">https://registry.npmjs.org/source-map/-/source-map-0.1.0.tgz</a>
npm http 200 <a href="https://registry.npmjs.org/browserbuild/-/browserbuild-0.4.9.tgz">https://registry.npmjs.org/browserbuild/-/browserbuild-0.4.9.tgz</a>
npm http GET <a href="https://registry.npmjs.org/commander">https://registry.npmjs.org/commander</a>
npm http GET <a href="https://registry.npmjs.org/debug/0.6.0">https://registry.npmjs.org/debug/0.6.0</a>
npm http GET <a href="https://registry.npmjs.org/requirejs">https://registry.npmjs.org/requirejs</a>
npm http 200 <a href="https://registry.npmjs.org/requirejs">https://registry.npmjs.org/requirejs</a>
npm http GET <a href="https://registry.npmjs.org/requirejs/-/requirejs-2.0.0.tgz">https://registry.npmjs.org/requirejs/-/requirejs-2.0.0.tgz</a>
npm http 200 <a href="https://registry.npmjs.org/debug/0.6.0">https://registry.npmjs.org/debug/0.6.0</a>
npm http GET <a href="https://registry.npmjs.org/debug/-/debug-0.6.0.tgz">https://registry.npmjs.org/debug/-/debug-0.6.0.tgz</a>
npm http 200 <a href="https://registry.npmjs.org/commander">https://registry.npmjs.org/commander</a>
npm http GET <a href="https://registry.npmjs.org/commander/-/commander-0.5.2.tgz">https://registry.npmjs.org/commander/-/commander-0.5.2.tgz</a>
npm http 200 <a href="https://registry.npmjs.org/requirejs/-/requirejs-2.0.0.tgz">https://registry.npmjs.org/requirejs/-/requirejs-2.0.0.tgz</a>
npm http 200 <a href="https://registry.npmjs.org/debug/-/debug-0.6.0.tgz">https://registry.npmjs.org/debug/-/debug-0.6.0.tgz</a>
npm http 200 <a href="https://registry.npmjs.org/commander/-/commander-0.5.2.tgz">https://registry.npmjs.org/commander/-/commander-0.5.2.tgz</a>
<a href="&#x6d;&#97;&#105;&#108;&#x74;&#x6f;&#x3a;&#66;&#x62;&#x72;&#111;&#119;&#115;&#x65;&#x72;&#98;&#117;&#x69;&#x6c;&#x64;&#x40;&#x30;&#x2e;&#x34;&#46;&#57;">&#66;&#x62;&#x72;&#x6f;&#119;&#115;&#x65;&#114;&#98;&#117;&#105;&#108;&#100;&#x40;&#x30;&#46;&#52;&#46;&#x39;</a> ./node_modules/browserbuild
├── <a href="&#x6d;&#97;&#x69;&#108;&#116;&#x6f;&#x3a;&#x64;&#101;&#98;&#x75;&#103;&#x40;&#48;&#x2e;&#54;&#x2e;&#x30;">&#x64;&#x65;&#98;&#x75;&#x67;&#64;&#x30;&#x2e;&#x36;&#x2e;&#x30;</a>
└── <a href="&#x6d;&#x61;&#105;&#108;&#116;&#111;&#58;&#x63;&#x6f;&#x6d;&#x6d;&#x61;&#110;&#x64;&#101;&#x72;&#64;&#48;&#46;&#53;&#x2e;&#x32;">&#99;&#111;&#x6d;&#109;&#x61;&#110;&#x64;&#x65;&#x72;&#x40;&#48;&#x2e;&#x35;&#46;&#x32;</a>
<a href="&#x6d;&#97;&#105;&#108;&#x74;&#x6f;&#58;&#x73;&#111;&#x75;&#x72;&#99;&#x65;&#x2d;&#109;&#x61;&#x70;&#64;&#48;&#x2e;&#49;&#46;&#x30;">&#x73;&#x6f;&#117;&#x72;&#99;&#x65;&#x2d;&#x6d;&#97;&#x70;&#x40;&#48;&#x2e;&#49;&#46;&#48;</a> ./node_modules/source-map
└── <a href="&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#114;&#101;&#x71;&#117;&#105;&#x72;&#101;&#x6a;&#115;&#x40;&#x32;&#x2e;&#x30;&#46;&#x30;">&#114;&#101;&#113;&#x75;&#105;&#x72;&#101;&#106;&#x73;&#64;&#50;&#x2e;&#x30;&#46;&#48;</a>
perl web/setup.pl
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</p>

<pre><code>                             Dload  Upload   Total   Spent    Left  Speed
</code></pre>

<p>  0     0    0     0    0     0      0      0 &mdash;:&mdash;:&mdash;  0:00:06 &mdash;:&mdash;:&mdash;     0
100  320k  100  320k    0     0  39278      0  0:00:08  0:00:08 &mdash;:&mdash;:&mdash;  343k
&mdash;> Working on String::ShellQuote
Fetching <a href="http://www.cpan.org/authors/id/R/RO/ROSCH/String-ShellQuote-1.04.tar.gz">http://www.cpan.org/authors/id/R/RO/ROSCH/String-ShellQuote-1.04.tar.gz</a> &hellip; OK
Configuring String-ShellQuote-1.04 &hellip; OK
Building String-ShellQuote-1.04 &hellip; OK
Successfully installed String-ShellQuote-1.04
&mdash;> Working on JSON::PP
Fetching <a href="http://www.cpan.org/authors/id/M/MA/MAKAMAKA/JSON-PP-2.27200.tar.gz">http://www.cpan.org/authors/id/M/MA/MAKAMAKA/JSON-PP-2.27200.tar.gz</a> &hellip; OK
Configuring JSON-PP-2.27200 &hellip; OK
Building JSON-PP-2.27200 &hellip; OK
Successfully installed JSON-PP-2.27200 (upgraded from 2.27105)
2 distributions installed
```</p>

<p>bin/jsxにファイルができあがるのでこれでインストールは終わり。</p>

<h2>Hello World!</h2>

<p>試しにhello worldを実行してみる。一度jsファイルで出力してnodeで実行する。
<code>
$ ./bin/jsx --executable --output hello.js example/hello.jsx
$ node hello.js
</code></p>

<p>また一々jsファイルを作成しなくても以下のようにすれば実行できるみたい。</p>

<p><code>
$ ./bin/jsx --run example/hello.jsx
</code></p>

<h2>jsx.vimのインストール</h2>

<p>jsxのVim用syntaxファイルが実はあるみたいなのでインストールする。自分はNeoBundleを使用しているのでNeoBundleでインストールした。
<code>vim .vimrc
NeoBundle 'git://github.com/jsx/jsx.vim.git'
</code>
.vimrc書いて<code>:Unite neobundle/install</code>か<code>:NeoBundleInstall</code>でインストールができる。</p>

<h2>quickrunの設定を書く</h2>

<p>まあ毎回コマンド叩くの面倒だよねってことでquickrunから一発で実行できるようにしてみる。</p>

<p>まずはJSXをPATHの通った所(自分の場合は$HOME/app/*/bin)に配置する。
jsxファイル単体をbinの中に置いても動作しなかったのでgit cloneしたやつ丸ごと移動させた。</p>

<p><code>
$ mv JSX ~/app/JSX
</code></p>

<p>次に.vimrcに拡張子がjsxのファイルの扱いを設定する。<s>syntaxファイルがないのでとりあえずjavascriptのが有効になるようにしてみた。</s>syntaxファイルあったので修正。</p>

<p>``` vim .vimrc
let g:quickrun_config = {}
let g:quickrun_config[&lsquo;jsx&rsquo;] = {</p>

<pre><code>        \ 'command': 'jsx',
        \ 'exec': ['%c --run %s']
        \ }
</code></pre>

<p>```</p>

<p>後はテキトーにjsxファイルを開いて<code>&lt;Leader&gt;r</code>を押すとそのまま実行されて結果が表示されるようになる。</p>

<h2>shadow.vimで使ってみる</h2>

<p>こんな感じでコードの最初の行にshadow.vim向けの1行を追加したshdファイルを作成した後<code>vim hello.js</code>と.shdなしのファイルを開くと自動的に.shd付きのファイルが開かれ、保存時に自動でjsにコンパイルされたものがhello.jsに保存されます。
``` javascript hello.js.shd
// jsx /dev/stdin</p>

<p>class _Main {</p>

<pre><code>static function main(args : string[]) :void {
    log "Hello, world!";
}
</code></pre>

<p>}</p>

<p>// vim: set ft=jsx :
```</p>

<p>しかしこれやってみたけど、できあがるファイルに/dev/stdinとか入るから複数ファイル使うような時に使えないような気がしないでもない。</p>
]]></content>
  </entry>
  
</feed>
