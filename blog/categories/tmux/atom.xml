<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tmux | hamaco's blog]]></title>
  <link href="http://hamaco.github.com/blog/categories/tmux/atom.xml" rel="self"/>
  <link href="http://hamaco.github.com/"/>
  <updated>2013-02-14T16:36:55+09:00</updated>
  <id>http://hamaco.github.com/</id>
  <author>
    <name><![CDATA[hamaco]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Macのtmuxでクリップボードを使えるようにする（主にVimの為に）]]></title>
    <link href="http://hamaco.github.com/blog/2012/07/05/fix-macosx-tmux-pasteboard/"/>
    <updated>2012-07-05T16:22:00+09:00</updated>
    <id>http://hamaco.github.com/blog/2012/07/05/fix-macosx-tmux-pasteboard</id>
    <content type="html"><![CDATA[<p>MacOSXのtmuxだとpbcopy|pbpasteが正常に動作しないみたいで、CUI版のVimで<code>set clipboard=unnamed</code>していると<code>p</code>でペーストする際に<code>E353: Nothing in register *</code>とかエラーがでてペーストが一切できなくなってしまいます。
常にGui版のMacVimでも使っていれば良いのですが、流石にCUI版を一切使わない or ペーストしない生活は私には出来ないのでちょっと調べてみたら結構簡単に対処できたのでメモ。</p>

<h2>やり方</h2>

<p><a href="https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard">ChrisJohnsen/tmux-MacOSX-pasteboard</a>を使うと簡単にできるみたいです。READMEに書いてあるままやってるだけなのでそのままそっち見ながらやった方が楽かもしれない。</p>

<h3>プログラムのコンパイル</h3>

<p>普通にgitでcloneしてきてからmakeして、PATHの通った所にファイルを置きます。</p>

<p><code>
git clone https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard.git
cd tmux-MacOSX-pasteboard
make reattach-to-user-namespace
cp reattach-to-user-namespace ~/bin/
</code></p>

<p>別にmakeだけでも実行ファイルできあがりますが、ついでにtestとかいうのもmakeされるので、READMEに書かれてる通りmakeに引数渡してます。</p>

<h3>tmuxの設定</h3>

<p>次に<code>.tmux.conf</code>に以下の内容を追加。</p>

<p><code>
set-option -g default-command "reattach-to-user-namespace -l zsh"
</code></p>

<h3>できた</h3>

<p>これで準備は完了。後は<code>tmux kill-server</code>とかやってtmux立ち上げ直すと<code>date | pbcopy</code>とかで結果がMacのクリップボードに入るようになっているはず。
無事クリップボードが使えるようになったら、Vimでも<code>set clipboard=unnamed</code>している状態でコピペが動作するようになっているのを確認して終了!</p>

<h2>参考サイト</h2>

<p><a href="http://d.hatena.ne.jp/koseki2/20110816/TmuxCopy">Mac の tmux でクリップボードを使う。 - こせきの技術日記</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH切断時にtmuxが自動で閉じないようにした]]></title>
    <link href="http://hamaco.github.com/blog/2012/04/16/tmux-zombie/"/>
    <updated>2012-04-16T14:40:00+09:00</updated>
    <id>http://hamaco.github.com/blog/2012/04/16/tmux-zombie</id>
    <content type="html"><![CDATA[<p>SSHとかで接続失敗した時とか画面表示確認する前に閉じられてしまい原因調べるのが面倒だったので、ssh/mosh コマンド実行時にはセッションが閉じてもtmuxのWindowsが閉じないようにしてみました。</p>

<h2>SSH用</h2>

<p>``` sh
function ssh_tmux() {</p>

<pre><code>eval server=\${$#}
tmux set set-remain-on-exit on\; \
    new-window -n s:$server "ssh $*"\; \
    set set-remain-on-exit off &gt; /dev/null
</code></pre>

<p>}
alias ssh=ssh_tmux
```</p>

<h2>Mosh用</h2>

<p>``` sh
function mosh_tmux() {</p>

<pre><code>eval server=\${$#}
tmux set set-remain-on-exit on\; \
    new-window -n s:$server "mosh $*"\; \
    set set-remain-on-exit off &gt; /dev/null
</code></pre>

<p>}
alias mosh=mosh_tmux
```</p>

<p>screenの時は良く分からなくて <code>zombie ^[</code> と書いて全て残るようにしてたんだけど、tmuxはコマンド使えるので普段は自動で閉じて、ssh/moshの時だけ閉じないとかできて楽チンですね。</p>
]]></content>
  </entry>
  
</feed>
